/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import React, { useRef } from "react";

const HELIX_SPEED = 6;

export function Airplane(props) {
  const { nodes, materials } = useGLTF("./models/airplane/Star.glb");
  const scroll = useScroll();
  
  const star1 = useRef();
  const star2 = useRef();
  const star3 = useRef();

  const velocities = [useRef([0.01, 0.01, 0.01]), useRef([0.01, -0.01, 0.01]), useRef([-0.01, 0.01, 0.01])];

  useFrame((_state, delta) => {
    const stars = [star1, star2, star3];

    stars.forEach((star, i) => {
      const vel = velocities[i].current;

      // Update position based on current velocity
      star.current.position.x += vel[0] * delta * 60;
      star.current.position.y += vel[1] * delta * 60;
      star.current.position.z += vel[2] * delta * 60;

      // Boundary check and bounce
      ['x', 'y', 'z'].forEach((axis, aIdx) => {
        if (Math.abs(star.current.position[axis]) > 2) {
          vel[aIdx] *= -1;
        }
      });

      // Add spin
      star.current.rotation.x += delta * HELIX_SPEED;
      star.current.rotation.y += delta * HELIX_SPEED;
    });
  });

  return (
    <group {...props} dispose={null}>
      {/* Star 1 - Top Vertex of Triangle */}
      <mesh
        ref={star1}
        geometry={nodes.pCylinder3001.geometry}
        material={materials['blinn2SG.001']}
        position={[0, 1, 0]}
        scale={[0.004, 0.004, 0.004]}
        rotation={[0, 0, 0]}
      >
        <meshStandardMaterial 
          color="white"
          metalness={0.5}
          roughness={0.2}
          emissive="white"
          emissiveIntensity={0.5}
        />
      </mesh>

      {/* Star 2 - Bottom Left of Triangle */}
      <mesh
        ref={star2}
        geometry={nodes.pCylinder3001.geometry}
        material={materials['blinn2SG.001']}
        position={[-0.866, -0.5, 0]}  // 60-degree triangle coords
        scale={[0.004, 0.004, 0.004]}
        rotation={[0, 0, 0]}
      >
        <meshStandardMaterial 
          color="white"
          metalness={0.5}
          roughness={0.2}
          emissive="white"
          emissiveIntensity={0.5}
        />
      </mesh>

      {/* Star 3 - Bottom Right of Triangle */}
      <mesh
        ref={star3}
        geometry={nodes.pCylinder3001.geometry}
        material={materials['blinn2SG.001']}
        position={[0.866, -0.5, 0]}
        scale={[0.004, 0.004, 0.004]}
        rotation={[0, 0, 0]}
      >
        <meshStandardMaterial 
          color="white"
          metalness={0.5}
          roughness={0.2}
          emissive="white"
          emissiveIntensity={0.5}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/airplane/Star.glb");
